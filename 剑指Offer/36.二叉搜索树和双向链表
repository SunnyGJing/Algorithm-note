"""
Creat time: 2019-10-08 18：56
TimeToCode：
Last modified time: 

给定一个二叉搜索树，把它转换为双向链表。

解法1：普通思路的递归（不是自己做的！！！！！！）
解法2：改变了递归顺序，特别赞（不是自己做的！！！！！！）
"""
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};


class Solution_1 {
public:
    TreeNode* Convert(TreeNode* pRootOfTree)
    {
        if(pRootOfTree == nullptr) return nullptr;
        TreeNode* pre = nullptr;
         
        convertHelper(pRootOfTree, pre);
         
        TreeNode* res = pRootOfTree;
        while(res ->left)
            res = res ->left;
        return res;
    }
     
    void convertHelper(TreeNode* cur, TreeNode*& pre)
    {
        if(cur == nullptr) return;
         
        convertHelper(cur->left, pre);
         
        cur->left = pre;
        if(pre) pre ->right = cur;
        pre = cur;
         
        convertHelper(cur->right, pre);  
    }
};


class Solution_2 {
public:
    TreeNode* recordNode = nullptr;
    TreeNode* Convert(TreeNode* pRootOfTree) {
        if(pRootOfTree==NULL) return nullptr;

        Convert(pRootOfTree->right);
        if(recordNode==NULL)
            recordNode = pRootOfTree;
        else {
            recordNode->left = pRootOfTree;
            pRootOfTree->right = recordNode;
            recordNode = pRootOfTree;
        }
        Convert(pRootOfTree->left);

        return recordNode;
    }
};