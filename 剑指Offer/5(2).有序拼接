"""
Creat time: 2019-07-22 15:22
Last modified time: 

有两个数组A1和A2，有序地拼接这两个数组。

2种Solution
1) hash字典记录数字个数   O(nlogn)+O(n)
2) 先拼接再排序   O(nlogn)+O(1)
"""

Class Solution_1{
public:
    void orderedStitch(int *a1, int *a2, int length_a1, int length_a2) {
        map<int, int> h;
        for(int i=0; i<length_a1; i++) {
            h[a1[i]] = h[a1[i]] ? h[a1[i]] + 1 : 1;
        }
        for(int i=0; i<length_a2; i++) {
            h[a2[i]] = h[a2[i]] ? h[a2[i]] + 1 : 1;
        }
        int index = 0;
        for(map<int,int>::iterator iter=h.begin(); iter!=h.end(); iter++){
            int count = iter->second;
            while(count--)
                a1[index++] = iter->first;
        }
    }
}

Class Solution_2{
public:
    void orderedStitch(int *a1, int *a2, int length_a1, int length_a2) {
        for(int i=0; i<length_a2; i++) {
            a1[length_a1+i] = a2[i];
        }
        sort(a1, a1+length_a1+length_a2);
    }
}