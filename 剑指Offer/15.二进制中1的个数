"""
Creat time: 2019-07-29 14:49
Last modified time: 

给定一个整数，输出它的二进制数中1的个数。（其中负数用补码

解法1：自己的解法
解法2~3：《剑指offer》的解法
"""

class Solution_1 {
public:
     int  NumberOf1(int n) {
        if(n <= 0) return 0;
        int count = 0;
        int times[31];
        times[0] = 1;
        for(int i=1; i<31; i++)
            times[i] = times[i-1] * 2;
        for(int i=30; i>=0; i--) {
            if(n >= times[i]) {
                cout << i << ' ' << times[i] << endl;
                count ++;
                n -= times[i];
            }
        }
        return count;
     }
};

class Solution_2 {
public:
    int  NumberOf1(int n) {
        int count = 0;
        unsigned int flag = 1;
        while(flag) {
            if(n & flag)
                count ++;
            flag = flag << 1;
        }
        return count;
    }
};

class Solution_3 {
public:
    int  NumberOf1(int n) {
        int count = 0;
        while(n) {
            count ++;
            n = (n - 1) & n;
        }
        return count;
    }
};