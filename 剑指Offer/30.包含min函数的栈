"""
Creat time: 2019-08-26 16：31
Last modified time: 2019-09-04 13:34

实现一个找到栈的最小元素的函数，pop、push、min的复杂度都是O(1)。

解法：使用辅助站 将当前最小元素push进辅助站中 随原始栈的pop推出

"""

class Solution_1 {
public:
    stack<int> s;
    stack<int> sMin;
    void push(int value) {
        s.push(value);
        if(sMin.empty() || sMin.top() >= value)
            sMin.push(value);
    }
    void pop() {
        assert(!s.empty() && !sMin.empty());

        if(sMin.top() == s.top())
            sMin.pop();
        s.pop();
    }
    int top() {
        assert(!s.empty());

        return s.top();
    }
    int min() {
        assert(!sMin.empty());
        
        return sMin.top();
    }
};


class Solution_2 {
public:
    stack<int> sMin;
    stack<int> s;
    void push(int value) {
        s.push(value);
        if(sMin.empty() || value <= sMin.top())
            sMin.push(value);
    }
    void pop() {
        if(!s.empty()) {
            if(s.top() == sMin.top())
                sMin.pop();
            s.pop();
        }
    }
    int top() {
        if(!s.empty())
            return s.top();
        return -1;
    }
    int min() {
        if(!sMin.empty())
            return sMin.top();
        return -1;
    }
};