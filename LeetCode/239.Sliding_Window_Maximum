"""
Creat time:2020-1-26上午
TimeToCode：
Last modified time: 

239.滑动窗口的最大值

给定一个数组nums和一个数字k，找出nums在大小为k的滑动窗口中的最大值。

Example:
Input: nums = [1,3,-1,-3,5,3,6,7], and k = 3
Output: [3,3,5,5,6,7] 
Explanation: 
Window position                Max
---------------               -----
[1  3  -1] -3  5  3  6  7       3
 1 [3  -1  -3] 5  3  6  7       3
 1  3 [-1  -3  5] 3  6  7       5
 1  3  -1 [-3  5  3] 6  7       5
 1  3  -1  -3 [5  3  6] 7       6
 1  3  -1  -3  5 [3  6  7]      7

"""


class Solution:
    
    # 《leetcode》中使用“单调队列”的方法
    # 思路：
    # 新建一个单调递减队列，队首元素为当前滑动窗口取得的最大值的下标
    # 遍历数组中的每个元素，
    # 如果队首元素已经不在窗口内，则队首元素出队
    # 如果队尾元素不是当前窗口的最大值，队尾元素出队
    # 当前元素入队，如果队列长度达到窗口长度，就可以记录下当前窗口的最大值了


    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        if not nums or k <= 0 or k > len(nums): return []
        result = []        
        dq = collections.deque() # store index

        for i, num in enumerate(nums):
            if dq and dq[0] < i-k+1:  # 从队列中弹出不经不在窗口中的元素
                dq.popleft()
            while dq and nums[dq[-1]] < num:  # 从队列中弹出不是当前窗口最大值的元素
                dq.pop()
            dq.append(i)
            if i-k+1 >= 0:  # 当且仅当窗口满(size=k)时，才记录结果
                result.append(nums[dq[0]])
        
        return result