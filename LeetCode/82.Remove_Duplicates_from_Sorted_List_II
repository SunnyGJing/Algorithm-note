"""
Creat time:2020-2-13下午
TimeToCode：
Last modified time:

82.删除有序链表的重复元素_Ⅱ

给定一个有序链表，只保留链表中只出现过一次的元素

Example 1:
    Input: 1->2->3->3->4->4->5
    Output: 1->2->5
Example 2:
    Input: 1->1->1->2->3
    Output: 2->3

"""

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:

    # 非常简单，和“83.删除有序链表的重复元素”的不同之处在于：
    # 83题的链表头元素一定不会被删去，而本题的链表头元素可能被删去，所以必要新建一个链表头pHead
    
    # 解决思路是：“有序数组的多指针”
    
    # 做法如下：
    # 指针a指向新的链表头部，指针b指向当前等待判断的位置下标
    # 用指针b遍历链表中的每个元素
    # 如果b元素是末尾元素或者不等于它后面的元素，说明b指向的元素不是要删除的元素，那么赋值a->next=b
    # 如果b元素等于它后面的元素，说明b指向的元素是要删除的元素，那么b指针向后查找第一个和它不相等的元素位置
    # 现在b指向的元素还在等待判断是否要删除，所以先不要让a->next=b
    # 迭代查找结束后，a指向了最后一个不重复的元素，必须要赋值a->next=None
    # PS:因为a的后面还跟着许多结点，必须要将它们剪掉


    def deleteDuplicates(self, head: ListNode) -> ListNode:
        if not head: return head

        pHead = ListNode(0)
        a, b = pHead, head

        while b:
            if not b.next or b.val != b.next.val:
                a.next = b
                a = a.next
                b = b.next
            else:
                cur = b.val
                while b and b.val == cur:
                    b = b.next
        a.next = None

        return pHead.next
            